{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","javascripts/addNewSong.js","javascripts/domFunctions.js","javascripts/executeThisCodeAfterFileIsLoaded.js","javascripts/main.js","javascripts/moreSongs.js","javascripts/musicFilter.js","javascripts/musicHistoryModule.js","javascripts/songPrint.js"],"names":[],"mappings":"AAAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrjJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"bundle.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","\"use strict\";\n\nlet musicProgram = require(\"./musicHistoryModule\");\nlet addDeleteButtons = require(\"./domFunctions\").addDeleteButtons;\n\n//main nav button to add new music\nvar $elAddMusic = $(\"#elAddMusic\");\n//add new artist button\nvar $addArtistButton= $(\"#addArtistButton\");\n//add artist input div\nvar $addArtist = $(\"#addArtist\");\n//left side select options\nvar $elArtistSelect = $(\"#artistSelect\");\n//main output div\nvar $elListSongs = $(\"#listSongs\");\n\n$elAddMusic.click(classTrigger);\n//closes add artist section after user submits\n$addArtistButton.click(classTrigger);\n//submits user data for add artist\n$addArtistButton.click(addNewArtist);\n\n//function to add new artist to songData\nfunction addNewArtist() {\n  var $artist = $(\"#newArtist\");\n  var $song = $(\"#newSong\");\n  var $album = $(\"#newAlbum\");\n  var newObj = { \"Song\": $song.val(), \"Artist\": $artist.val(), \"Album\": $album.val()};\n\n  musicProgram.songData.unshift(newObj);\n  musicProgram.songPrint(musicProgram.songData);\n  addDeleteButtons();\n}\n\n//if user presses enter after entering info, it runs the addNewArtist function\ndocument.getElementById(\"newAlbum\").addEventListener(\"keyup\", function(event) {\n    event.preventDefault();\n    if (event.keyCode == 13) {\n        $addArtistButton.click();\n    }\n});\n\nfunction classTrigger() {\n  $addArtist.toggleClass(\"visibility\");\n  $elArtistSelect.toggleClass(\"visibility\");\n  $elListSongs.toggleClass(\"visibility\");\n}\n\n","\"use strict\";\n\nlet musicProgram = require(\"./musicHistoryModule\");\n\nlet $moreButton = $(\"#moreButton\");\n$moreButton.click(addSongs);\n\n//add more songs button at the bottom\nfunction addSongs(music) {\n  musicProgram.addMoreSongsButton()\n  .then(function(json) {\n  console.log(\"ADD MORE SONGS\");\n    musicProgram.addNewMusic(json, musicProgram.songData);\n    $moreButton.prop('disabled', true);\n\n   addDeleteButtons();\n\n  });\n}\n\n//waits for document to be ready and then adds delete buttons\nlet addDeleteButtons = function() {\n   $(document).ready(function() {\n  let $elDeleteMusic = $(\".deleteButton\");\n  $elDeleteMusic.click(deleteItem);\n  });\n};\n\n\n//locates which div you clicked on to delete\nlet deleteItem = function () {\n  var elToDelete = event.target.closest(\"div\");\n  var idToDelete = elToDelete.id.split(\"--\")[1];\n  musicProgram.songData.splice(idToDelete, 1);\n  musicProgram.songPrint(musicProgram.songData);\n\n  addDeleteButtons();\n};\n \n\nlet printArtistList = function(artistList) {\n  let $selectArtist = $(\"#selectArtist\");\n  let htmlToAdd = \"\";\n  htmlToAdd += `<option disabled selected>Select an artist.</option>`;\n\n  for (var i = 1; i < artistList.length; i++) {\n    htmlToAdd += `<option>${artistList[i]}</option>`;\n  }\n\n  $selectArtist.html(htmlToAdd);\n};\n\n\n  module.exports = {addDeleteButtons, printArtistList};\n\n\n","\"use strict\";\n\nlet songPrint = require(\"./songPrint\");\n\nfunction executeThisCodeAfterFileIsLoaded(responseText) {\n  songPrint(responseText);\n}\n\nmodule.exports = executeThisCodeAfterFileIsLoaded;","\"use strict\";\n\nlet musicProgram = require(\"./musicHistoryModule\");\nlet addDeleteButtons = require(\"./domFunctions\").addDeleteButtons;\nlet printArtistList = require(\"./domFunctions\").printArtistList;\nlet addNewSong = require(\"./addNewSong\");\nlet populateArtistList = require(\"./musicFilter\");\n\n//initial ajax request for list of songs\nfunction ajaxRequest() {\n  return new Promise((resolve, reject) => {$.ajax(\"json/json.json\")\n      .done( function(jsonData) {\n        console.log(\"json data loaded:\", jsonData);\n        console.log(\"test var\", musicProgram.testVar);\n        resolve(jsonData);\n      })\n      .fail(function() {\n        console.log(\"jqhxr request failed to load\");\n      });\n    });\n}\n\n//does the ajax request then prints to dom and saves json in songData\n  ajaxRequest().then(\n    function(json_data){\n      musicProgram.executeThisCodeAfterFileIsLoaded(json_data);\n      musicProgram.songData = json_data;\n      addDeleteButtons();\n      populateArtistList(printArtistList);\n});\n\n\n\n// //expose list of songs... why can't you call it from the DOM?\n\n// let getListOfSongs= function () {\n//   return musicProgram.songData;\n// };","\"use strict\";\n\n// let musicProgram = require(\"./musicHistoryModule\");\nlet songPrint = require(\"./songPrint\");\n\n\nfunction addMoreSongsButton() {\n    return new Promise((resolve, reject) => {$.ajax(\"json/json2.json\")\n      .done(function(jsonData) {\n        resolve(jsonData);\n      })\n      .fail(function() {\n        console.log(\"jqhxr request failed to load\");\n      });\n      });\n}\n\n\n//adds additional JSON file from addMoreSongs\nfunction addNewMusic(responseText, songData) {\n  let newSongData = responseText;\n  // console.log(\"TESTING\", musicProgram.testVar);\n  newSongData.forEach(function(object){\n    songData.unshift(object);\n    songPrint(songData);\n  });\n  }\n\nmodule.exports = {addMoreSongsButton, addNewMusic};","\"use strict\";\n\nlet musicProgram = require(\"./musicHistoryModule\");\nlet $selectArtist = $(\"#selectArtist\");\nlet $selectAlbum = $(\"#selectAlbum\");\nlet addDeleteButtons = require(\"./domFunctions\").addDeleteButtons;\n\n\n$selectAlbum.change(selectAlbum);\n\nfunction selectAlbum() {\n  console.log($selectArtist.val());\n  console.log($selectAlbum.val());\n  let musicByAlbum = [];\n  if ($selectArtist.val() === null) {\n    console.log(\"no artist is selected...\");\n  }\n  for (var x in musicProgram.songData) {\n    // console.log(\"songData\", musicProgram.songData[x])\n    if ($selectAlbum.val() === musicProgram.songData[x].Album) {\n      musicByAlbum.push(musicProgram.songData[x]);\n    }\n    musicProgram.songPrint(musicByAlbum);\n    console.log(\"YO\", musicByAlbum);\n  }\n}\n\n$selectArtist.change(selectArtist);\n\nlet filterResultsByArtist = [];\n\nfunction selectArtist() {\n  filterResultsByArtist = [];\n  let selArtist = $selectArtist.val();\n  for (var x in musicProgram.songData) {\n    console.log(\"array data\", musicProgram.songData[x].Artist);\n    console.log(\"selected artist\", selArtist);\n    if (selArtist === musicProgram.songData[x].Artist) {\n      console.log(\"HI\");\n      filterResultsByArtist.push(musicProgram.songData[x]);\n      console.log(\"filter results by artist\", filterResultsByArtist);\n    }\n  }\n  musicProgram.songPrint(filterResultsByArtist);\n  filterDeleteButtons();\n  filterAlbums(selArtist);\n}\n\n//finds albums by selected artist and adds them to drop down selection\nfunction filterAlbums(selArtist) {\n  let eachAlbum = [\"Select an album:\"];\n\n  for (var x in musicProgram.songData) {\n    let artist = musicProgram.songData[x].Artist;\n    let album = musicProgram.songData[x].Album\n    let arrayCounter = null;\n\n    for (var i = 0; i < eachAlbum.length; i++) {\n      arrayCounter ++;\n      let matchBoolean = false;\n\n      if (artist === selArtist && album === eachAlbum[i]) {\n        matchBoolean = true;\n      }\n\n      else {\n        if(artist === selArtist && arrayCounter === eachAlbum.length && matchBoolean === false) {\n          eachAlbum.push(album);\n        } \n      }\n    }\n  }\n  console.log(eachAlbum);\n\n  let $selectAlbum = $(\"#selectAlbum\");\n  let htmlToAdd = \"\";\n  htmlToAdd += `<option disabled selected>Select an album.</option>`;\n\n  for (let i = 1; i < eachAlbum.length; i++) {\n    htmlToAdd += `<option>${eachAlbum[i]}</option>`;\n  }\n\n  $selectAlbum.html(htmlToAdd);\n\n}\n\n//\n\n\n//waits for document to be ready and then adds delete buttons\nlet filterDeleteButtons = function() {\n   $(document).ready(function() {\n  let $elDeleteMusic = $(\".deleteButton\");\n  $elDeleteMusic.click(deleteFilteredItem);\n  });\n};\n\n\n//locates which div you clicked on to delete\nlet deleteFilteredItem = function () {\n  var elToDelete = event.target.closest(\"div\");\n  var idToDelete = elToDelete.id.split(\"--\")[1];\n  musicProgram.songData.splice(idToDelete, 1);\n  filterResultsByArtist.splice(idToDelete, 1)\n  musicProgram.songPrint(filterResultsByArtist);\n\n  filterDeleteButtons();\n};\n \n\nfunction populateArtistList(callback) {\n  console.log(\"HELLO\");\n  let eachArtist = [\"Select an artist:\"];\n\n  for (var x in musicProgram.songData) {\n    let artist = musicProgram.songData[x].Artist;\n    let arrayCounter = null;\n\n    for (var i = 0; i < eachArtist.length; i++) {\n      arrayCounter ++;\n      let matchBoolean = false;\n\n      if (artist === eachArtist[i]) {\n        matchBoolean = true;\n      }\n\n      else {\n        if(arrayCounter === eachArtist.length && matchBoolean === false) {\n          eachArtist.push(artist);\n        } \n      }\n    }\n  }\n  console.log(eachArtist);\n  callback(eachArtist);\n}\n\n\n\n\n\n\n\n\n\nmodule.exports = populateArtistList;","\"use strict\";\n\nconst songPrint = require(\"./songPrint\");\nconst executeThisCodeAfterFileIsLoaded = require(\"./executeThisCodeAfterFileIsLoaded\");\nconst addMoreSongsButton = require(\"./moreSongs\").addMoreSongsButton;\nconst addNewMusic = require(\"./moreSongs\").addNewMusic;\n\nlet songData = \"null\";\n\nlet testVar = \"asdfasfd\";\n\n/* \n  Now, construct an object that contains a key/value pair for each\n  of those modules that we pulled into this one\n*/\n\nlet musicHistoryModule = {\n songData, songPrint, executeThisCodeAfterFileIsLoaded, addMoreSongsButton, addNewMusic, testVar\n};\n\n/*\n  Every module needs to specify what its output is. Think of this as the\n  return statement in a function. What are we returning for use by other\n  modules in the application?\n */\n\nmodule.exports = musicHistoryModule;","\"use strict\";\n\n//goes through each item in songData, and prints it to DOM\nlet songPrinter = function (songData) {\n  let $listSongs = $('#listSongs') ;\n  let newHTML = \"\";\n  for (var x in songData) {\n  newHTML += `<div id=song--${x}> <h3> ${songData[x].Song} </h3><p> ${songData[x].Artist} | ${songData[x].Album}</p><input type=\"button\" class=\"deleteButton\" value=\"DESTROY\"></div>`;\n  }\n   $listSongs.html(newHTML);\n};\n\nmodule.exports = songPrinter;"]}